/*
 * Copyright 2013 Swedish E-identification Board (E-legitimationsnämnden)
 *  		 
 *   Licensed under the EUPL, Version 1.1 or ñ as soon they will be approved by the 
 *   European Commission - subsequent versions of the EUPL (the "Licence");
 *   You may not use this work except in compliance with the Licence. 
 *   You may obtain a copy of the Licence at:
 * 
 *   http://joinup.ec.europa.eu/software/page/eupl 
 * 
 *   Unless required by applicable law or agreed to in writing, software distributed 
 *   under the Licence is distributed on an "AS IS" basis,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
 *   implied.
 *   See the Licence for the specific language governing permissions and limitations 
 *   under the Licence.
 */
package com.aaasec.sigserv.csdaemon.config;

import com.aaasec.sigserv.cscommon.ObservableFrameCloser;
import java.awt.Point;
import java.util.Observer;

/**
 * Seconds calculator
 */
public class SecCalculator extends javax.swing.JFrame {

    ObservableFrameCloser frameCloser;
    Observer closeObserver;
    private final String responsePrefix;

    /** Creates new form SecCalculator */
    public SecCalculator(Observer closeOBserver, String contextKey, Point location, String initialValue) {
        super("Seconds Calculator");
        initComponents();
        this.setLocation(location);
        this.setVisible(true);
        this.setResizable(false);
        this.setAlwaysOnTop(true);
        this.closeObserver = closeOBserver;
        responsePrefix = contextKey;
        setFrameCloser();
        initializeValues(initialValue);
        jTextFieldDays.requestFocus();
    }

    private void setFrameCloser() {
        frameCloser = new ObservableFrameCloser(this, closeObserver);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDays = new javax.swing.JLabel();
        jLabelHours = new javax.swing.JLabel();
        jLabelMinutes = new javax.swing.JLabel();
        jLabelSeconds = new javax.swing.JLabel();
        jTextFieldDays = new javax.swing.JTextField();
        jTextFieldHours = new javax.swing.JTextField();
        jTextFieldMinutes = new javax.swing.JTextField();
        jTextFieldSeconds = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("adUiText"); // NOI18N
        jLabelDays.setText(bundle.getString("LabelDays")); // NOI18N

        jLabelHours.setText(bundle.getString("LabelHours")); // NOI18N

        jLabelMinutes.setText(bundle.getString("LabelMinutes")); // NOI18N

        jLabelSeconds.setText(bundle.getString("LabelSeconds")); // NOI18N

        jTextFieldDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDaysKeyReleased(evt);
            }
        });

        jTextFieldHours.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldHoursKeyReleased(evt);
            }
        });

        jTextFieldMinutes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMinutesKeyReleased(evt);
            }
        });

        jTextFieldSeconds.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSecondsKeyReleased(evt);
            }
        });

        jLabel5.setText(bundle.getString("LabelTotalSeconds")); // NOI18N

        jTextFieldTotal.setEditable(false);

        jButtonOK.setText(bundle.getString("ButtonOK")); // NOI18N
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setText(bundle.getString("ButtonCancel")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelDays)
                            .add(jTextFieldDays, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelHours)
                            .add(jTextFieldHours, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabelMinutes)
                            .add(jTextFieldMinutes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextFieldSeconds, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .add(jLabelSeconds, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                        .addContainerGap(43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jTextFieldTotal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .add(36, 36, 36)
                        .add(jButtonCancel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButtonOK)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(jLabel5)
                        .addContainerGap(333, Short.MAX_VALUE))))
        );

        layout.linkSize(new java.awt.Component[] {jTextFieldHours, jTextFieldMinutes, jTextFieldSeconds}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelDays)
                    .add(jLabelHours)
                    .add(jLabelMinutes)
                    .add(jLabelSeconds))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldSeconds, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldDays, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldHours, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldMinutes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonOK)
                    .add(jTextFieldTotal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        deliverResult();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jTextFieldDaysKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDaysKeyReleased
        displayResult();
    }//GEN-LAST:event_jTextFieldDaysKeyReleased

    private void jTextFieldHoursKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldHoursKeyReleased
        displayResult();
    }//GEN-LAST:event_jTextFieldHoursKeyReleased

    private void jTextFieldMinutesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMinutesKeyReleased
        displayResult();
    }//GEN-LAST:event_jTextFieldMinutesKeyReleased

    private void jTextFieldSecondsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSecondsKeyReleased
        displayResult();
    }//GEN-LAST:event_jTextFieldSecondsKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDays;
    private javax.swing.JLabel jLabelHours;
    private javax.swing.JLabel jLabelMinutes;
    private javax.swing.JLabel jLabelSeconds;
    private javax.swing.JTextField jTextFieldDays;
    private javax.swing.JTextField jTextFieldHours;
    private javax.swing.JTextField jTextFieldMinutes;
    private javax.swing.JTextField jTextFieldSeconds;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables

    private void displayResult() {
        int days = getInt(jTextFieldDays.getText());
        int hours = getInt(jTextFieldHours.getText());
        int minutes = getInt(jTextFieldMinutes.getText());
        int seconds = getInt(jTextFieldSeconds.getText());

        int total = (days * 60 * 60 * 24) + (hours * 60 * 60) + (minutes * 60) + seconds;
        jTextFieldTotal.setText(String.valueOf(total));
    }

    private void deliverResult() {
        int total =getInt(jTextFieldTotal.getText());
        String responseString = responsePrefix + String.valueOf(total);
        frameCloser.close(responseString);
    }

    private void initializeValues(String initialValue) {
        int val = getInt(initialValue);
        int hours = val / (60 * 60);
        int days = hours / 24;
        hours %= 24;
        int min = (val / 60) % 60;
        int sec = val % 60;

        jTextFieldDays.setText(String.valueOf(days));
        jTextFieldHours.setText(String.valueOf(hours));
        jTextFieldMinutes.setText(String.valueOf(min));
        jTextFieldSeconds.setText(String.valueOf(sec));
        displayResult();
    }

    private int getInt(String val) {
        int result;
        try {
            result = Integer.valueOf(val);
        } catch (NumberFormatException ex) {
            result = 0;
        }
        return result;

    }
}
